generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model monster {
  id            Int                   @id @default(autoincrement())
  name          String                @unique @db.VarChar(255)
  published     Boolean               @default(false)
  created_at    DateTime              @default(now())
  hp_multiplier Int                   @default(10)
  updated_at    DateTime              @default(now()) @updatedAt
  trigger_words String                @db.VarChar(255)
  avatar_url    String?               @db.VarChar(255)
  bar_theme     String                @default("bar_basic") @db.VarChar(255)
  relations_id  Int?
  hp_style      String                @default("Scaled")
  relations     relations?            @relation(fields: [relations_id], references: [id])
  redeems       monsters_on_redeems[]
  stages        stages[]
}

model stages {
  id                Int                 @id @default(autoincrement())
  ref_id            Int
  avatar_url        String?             @db.VarChar(255)
  hp_value          Int                 @default(25)
  pause_init        Boolean             @default(false)
  trigger_words     String              @db.VarChar(255)
  ref               monster             @relation(fields: [ref_id], references: [id], onDelete: Cascade)
  stages_on_redeems stages_on_redeems[]
}

model relations {
  id      Int       @id @default(autoincrement())
  monster monster[]
}

model redeems {
  id                Int                   @id @default(autoincrement())
  title             String                @unique @db.VarChar(255)
  default_image     String                @db.VarChar(255)
  twitch_id         String                @unique @db.VarChar(255)
  monsters          monsters_on_redeems[]
  stages_on_redeems stages_on_redeems[]
}

model monsters_on_redeems {
  monster_id Int
  redeems_id Int
  monster    monster @relation(fields: [monster_id], references: [id])
  redeems    redeems @relation(fields: [redeems_id], references: [id])

  @@id([monster_id, redeems_id])
}

model settings {
  id                 Int     @id @default(autoincrement())
  channel_name       String  @db.VarChar(255)
  is_connected       Boolean @default(false)
  listener_auth_code String  @db.VarChar(255)
  listener_client_id String  @db.VarChar(255)
  listener_secret    String  @db.VarChar(255)
  listener_user_name String  @db.VarChar(255)
  redirect_uri       String  @db.VarChar(255)
}

model refresh_token {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  value      String   @db.VarChar(255)
}

model stages_on_redeems {
  stages_id  Int
  redeems_id Int
  redeems    redeems @relation(fields: [redeems_id], references: [id])
  stages     stages  @relation(fields: [stages_id], references: [id])

  @@id([stages_id, redeems_id])
}
